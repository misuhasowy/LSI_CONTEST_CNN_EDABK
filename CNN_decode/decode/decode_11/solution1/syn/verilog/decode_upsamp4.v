// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module decode_upsamp4 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        conv4_out10_dout,
        conv4_out10_num_data_valid,
        conv4_out10_fifo_cap,
        conv4_out10_empty_n,
        conv4_out10_read,
        upsamp4_out11_din,
        upsamp4_out11_num_data_valid,
        upsamp4_out11_fifo_cap,
        upsamp4_out11_full_n,
        upsamp4_out11_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] conv4_out10_dout;
input  [1:0] conv4_out10_num_data_valid;
input  [1:0] conv4_out10_fifo_cap;
input   conv4_out10_empty_n;
output   conv4_out10_read;
output  [31:0] upsamp4_out11_din;
input  [1:0] upsamp4_out11_num_data_valid;
input  [1:0] upsamp4_out11_fifo_cap;
input   upsamp4_out11_full_n;
output   upsamp4_out11_write;
output   start_out;
output   start_write;

reg ap_idle;
reg conv4_out10_read;
reg[31:0] upsamp4_out11_din;
reg upsamp4_out11_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln108_reg_538;
reg   [0:0] empty_46_reg_560;
reg    ap_predicate_op51_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state11_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg    ap_predicate_op122_write_state8;
reg    ap_predicate_op123_read_state8;
reg    ap_predicate_op128_write_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    conv4_out10_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg    upsamp4_out11_blk_n;
reg   [0:0] empty_46_reg_560_pp0_iter1_reg;
reg   [31:0] reg_233;
reg    ap_predicate_op44_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op65_write_state4;
reg    ap_predicate_op66_read_state4;
reg    ap_predicate_op71_write_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_done_reg;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op106_write_state6;
reg    ap_predicate_op107_read_state6;
reg    ap_predicate_op112_write_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage7_11001;
reg   [31:0] reg_238;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op88_write_state5;
reg    ap_predicate_op89_read_state5;
reg    ap_predicate_op95_write_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_predicate_op115_write_state7;
reg    ap_predicate_op116_read_state7;
reg    ap_predicate_op121_write_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [31:0] upsam_buf4_V_q0;
reg   [31:0] reg_243;
wire   [31:0] upsam_buf4_V_q1;
reg   [31:0] reg_248;
wire   [0:0] icmp_ln108_fu_271_p2;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] div15_i_udiv_reg_542;
reg   [2:0] div15_i_udiv_reg_542_pp0_iter1_reg;
reg   [1:0] div15_i_udiv_cast_cast_reg_554;
wire   [0:0] empty_46_fu_345_p2;
wire  signed [3:0] zext_ln116_24_cast_fu_404_p3;
reg  signed [3:0] zext_ln116_24_cast_reg_574;
wire  signed [3:0] zext_ln114_24_cast_fu_416_p3;
reg  signed [3:0] zext_ln114_24_cast_reg_584;
wire   [4:0] div15_i_udiv_cast1_fu_449_p1;
reg   [4:0] div15_i_udiv_cast1_reg_599;
wire   [2:0] grp_fu_223_p2;
reg  signed [2:0] xor_ln114_reg_604;
reg   [31:0] upsam_buf_V_load_26_reg_609;
reg   [31:0] upsam_buf_V_load_28_reg_624;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [4:0] upsam_buf4_V_address0;
reg    upsam_buf4_V_ce0;
reg    upsam_buf4_V_we0;
reg   [4:0] upsam_buf4_V_address1;
reg    upsam_buf4_V_ce1;
reg    upsam_buf4_V_we1;
wire   [63:0] zext_ln114_fu_372_p1;
wire   [63:0] zext_ln116_fu_376_p1;
wire   [63:0] zext_ln114_23_fu_387_p1;
wire   [63:0] zext_ln116_23_fu_399_p1;
wire   [63:0] zext_ln116_24_fu_411_p1;
wire   [63:0] zext_ln114_24_fu_423_p1;
wire   [63:0] zext_ln116_25_fu_432_p1;
wire   [63:0] zext_ln116_26_fu_444_p1;
wire   [63:0] zext_ln114_25_fu_457_p1;
wire   [63:0] zext_ln116_27_fu_462_p1;
wire   [63:0] zext_ln116_28_fu_470_p1;
wire   [63:0] zext_ln114_26_fu_482_p1;
wire   [63:0] zext_ln114_27_fu_487_p1;
wire   [63:0] zext_ln114_28_fu_495_p1;
wire   [63:0] zext_ln114_29_fu_503_p1;
wire   [63:0] zext_ln116_29_fu_512_p1;
reg   [3:0] cona_col_fu_70;
wire   [3:0] cona_col_3_fu_351_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_cona_col_load;
reg   [3:0] cona_row_fu_74;
wire   [3:0] select_ln108_3_fu_309_p3;
reg   [3:0] ap_sig_allocacmp_cona_row_load;
reg   [6:0] indvar_flatten_fu_78;
wire   [6:0] add_ln108_fu_277_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg   [2:0] grp_fu_223_p0;
reg   [4:0] grp_fu_228_p0;
wire   [0:0] icmp_ln109_fu_289_p2;
wire   [3:0] add_ln108_3_fu_303_p2;
wire   [3:0] select_ln108_fu_295_p3;
wire   [0:0] trunc_ln109_fu_321_p1;
wire   [0:0] trunc_ln108_fu_317_p1;
wire   [2:0] zext_ln114_23_cast_fu_380_p3;
wire   [2:0] zext_ln116_23_cast_fu_392_p3;
wire  signed [3:0] sext_ln116_fu_428_p1;
wire   [4:0] zext_ln116_26_cast_fu_437_p3;
wire  signed [2:0] sext_ln114_fu_453_p0;
wire  signed [3:0] sext_ln114_fu_453_p1;
wire   [4:0] grp_fu_228_p2;
wire  signed [4:0] sext_ln116_6_fu_467_p1;
wire   [4:0] zext_ln114_26_cast_fu_475_p3;
wire  signed [4:0] sext_ln114_6_fu_492_p1;
wire  signed [4:0] sext_ln114_7_fu_500_p1;
wire  signed [4:0] sext_ln116_7_fu_508_p1;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_469;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

decode_upsamp4_upsam_buf4_V_Rbkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
upsam_buf4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(upsam_buf4_V_address0),
    .ce0(upsam_buf4_V_ce0),
    .we0(upsam_buf4_V_we0),
    .d0(conv4_out10_dout),
    .q0(upsam_buf4_V_q0),
    .address1(upsam_buf4_V_address1),
    .ce1(upsam_buf4_V_ce1),
    .we1(upsam_buf4_V_we1),
    .d1(conv4_out10_dout),
    .q1(upsam_buf4_V_q1)
);

decode_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_469)) begin
        if ((icmp_ln108_fu_271_p2 == 1'd0)) begin
            cona_col_fu_70 <= cona_col_3_fu_351_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            cona_col_fu_70 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_469)) begin
        if ((icmp_ln108_fu_271_p2 == 1'd0)) begin
            cona_row_fu_74 <= select_ln108_3_fu_309_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            cona_row_fu_74 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_469)) begin
        if ((icmp_ln108_fu_271_p2 == 1'd0)) begin
            indvar_flatten_fu_78 <= add_ln108_fu_277_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_78 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln108_reg_538 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        div15_i_udiv_cast1_reg_599[2 : 0] <= div15_i_udiv_cast1_fu_449_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln108_fu_271_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        div15_i_udiv_cast_cast_reg_554 <= {{select_ln108_fu_295_p3[2:1]}};
        div15_i_udiv_reg_542 <= {{select_ln108_fu_295_p3[3:1]}};
        empty_46_reg_560 <= empty_46_fu_345_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        div15_i_udiv_reg_542_pp0_iter1_reg <= div15_i_udiv_reg_542;
        empty_46_reg_560_pp0_iter1_reg <= empty_46_reg_560;
        icmp_ln108_reg_538 <= icmp_ln108_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op107_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op66_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op44_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op123_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_233 <= conv4_out10_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op116_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op89_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op51_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_238 <= conv4_out10_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_243 <= upsam_buf4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_248 <= upsam_buf4_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        upsam_buf_V_load_26_reg_609 <= upsam_buf4_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        upsam_buf_V_load_28_reg_624 <= upsam_buf4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        xor_ln114_reg_604 <= grp_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        zext_ln114_24_cast_reg_584[2 : 0] <= zext_ln114_24_cast_fu_416_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln116_24_cast_reg_574[2 : 0] <= zext_ln116_24_cast_fu_404_p3[2 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln108_reg_538 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_cona_col_load = 4'd0;
    end else begin
        ap_sig_allocacmp_cona_col_load = cona_col_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_cona_row_load = 4'd0;
    end else begin
        ap_sig_allocacmp_cona_row_load = cona_row_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_78;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (empty_46_reg_560 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_predicate_op51_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op123_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        conv4_out10_blk_n = conv4_out10_empty_n;
    end else begin
        conv4_out10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (empty_46_reg_560 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op116_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op89_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op51_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op107_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op66_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op44_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_predicate_op123_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        conv4_out10_read = 1'b1;
    end else begin
        conv4_out10_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_223_p0 = div15_i_udiv_reg_542_pp0_iter1_reg;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_223_p0 = div15_i_udiv_reg_542;
    end else begin
        grp_fu_223_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_228_p0 = div15_i_udiv_cast1_reg_599;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_228_p0 = div15_i_udiv_cast1_fu_449_p1;
        end else begin
            grp_fu_228_p0 = 'bx;
        end
    end else begin
        grp_fu_228_p0 = 'bx;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        upsam_buf4_V_address0 = zext_ln114_29_fu_503_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        upsam_buf4_V_address0 = zext_ln114_27_fu_487_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        upsam_buf4_V_address0 = zext_ln116_28_fu_470_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        upsam_buf4_V_address0 = zext_ln114_25_fu_457_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        upsam_buf4_V_address0 = zext_ln116_25_fu_432_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsam_buf4_V_address0 = zext_ln116_23_fu_399_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        upsam_buf4_V_address0 = zext_ln116_fu_376_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        upsam_buf4_V_address0 = zext_ln114_fu_372_p1;
    end else begin
        upsam_buf4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        upsam_buf4_V_address1 = zext_ln116_29_fu_512_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        upsam_buf4_V_address1 = zext_ln114_28_fu_495_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        upsam_buf4_V_address1 = zext_ln114_26_fu_482_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        upsam_buf4_V_address1 = zext_ln116_27_fu_462_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        upsam_buf4_V_address1 = zext_ln116_26_fu_444_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        upsam_buf4_V_address1 = zext_ln114_24_fu_423_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsam_buf4_V_address1 = zext_ln116_24_fu_411_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsam_buf4_V_address1 = zext_ln114_23_fu_387_p1;
    end else begin
        upsam_buf4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        upsam_buf4_V_ce0 = 1'b1;
    end else begin
        upsam_buf4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage2_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage3_11001) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        upsam_buf4_V_ce1 = 1'b1;
    end else begin
        upsam_buf4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (empty_46_reg_560 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        upsam_buf4_V_we0 = 1'b1;
    end else begin
        upsam_buf4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        upsam_buf4_V_we1 = 1'b1;
    end else begin
        upsam_buf4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op122_write_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0) & (empty_46_reg_560 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (empty_46_reg_560 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_predicate_op128_write_state8 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage3) & (empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_46_reg_560_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_46_reg_560_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        upsamp4_out11_blk_n = upsamp4_out11_full_n;
    end else begin
        upsamp4_out11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsamp4_out11_din = upsam_buf4_V_q1;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_46_reg_560_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        upsamp4_out11_din = upsam_buf_V_load_28_reg_624;
    end else if (((1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_predicate_op128_write_state8 == 1'b1))) begin
        upsamp4_out11_din = upsam_buf_V_load_26_reg_609;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (empty_46_reg_560 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op112_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        upsamp4_out11_din = reg_248;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (empty_46_reg_560 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op115_write_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op88_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        upsamp4_out11_din = reg_238;
    end else if ((((1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op121_write_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op95_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        upsamp4_out11_din = reg_243;
    end else if ((((ap_predicate_op122_write_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_46_reg_560_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op106_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op65_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        upsamp4_out11_din = reg_233;
    end else begin
        upsamp4_out11_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op122_write_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0_11001) & (empty_46_reg_560 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (empty_46_reg_560 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op121_write_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op115_write_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op95_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op88_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_predicate_op128_write_state8 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op112_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op106_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op65_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_46_reg_560_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_46_reg_560_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        upsamp4_out11_write = 1'b1;
    end else begin
        upsamp4_out11_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln108_3_fu_303_p2 = (ap_sig_allocacmp_cona_row_load + 4'd1);

assign add_ln108_fu_277_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560 == 1'd0)) | ((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560 == 1'd1)) | ((empty_46_reg_560 == 1'd0) & (conv4_out10_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560 == 1'd0)) | ((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560 == 1'd1)) | ((empty_46_reg_560 == 1'd0) & (conv4_out10_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560 == 1'd0)) | ((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560 == 1'd1)) | ((empty_46_reg_560 == 1'd0) & (conv4_out10_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560_pp0_iter1_reg == 1'd0)) | ((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560_pp0_iter1_reg == 1'd1)))) | ((conv4_out10_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op44_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560_pp0_iter1_reg == 1'd0)) | ((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560_pp0_iter1_reg == 1'd1)))) | ((conv4_out10_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op44_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560_pp0_iter1_reg == 1'd0)) | ((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560_pp0_iter1_reg == 1'd1)))) | ((conv4_out10_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op44_read_state2 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((upsamp4_out11_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op51_read_state3 == 1'b1) & (conv4_out10_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((upsamp4_out11_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op51_read_state3 == 1'b1) & (conv4_out10_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((upsamp4_out11_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op51_read_state3 == 1'b1) & (conv4_out10_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op71_write_state4 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op65_write_state4 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op66_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op71_write_state4 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op65_write_state4 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op66_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op71_write_state4 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op65_write_state4 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op66_read_state4 == 1'b1)))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op95_write_state5 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op88_write_state5 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op89_read_state5 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op95_write_state5 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op88_write_state5 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op89_read_state5 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op95_write_state5 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op88_write_state5 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op89_read_state5 == 1'b1))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op112_write_state6 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op106_write_state6 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op107_read_state6 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op112_write_state6 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op106_write_state6 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op107_read_state6 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op112_write_state6 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op106_write_state6 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op107_read_state6 == 1'b1))));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op121_write_state7 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op115_write_state7 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op116_read_state7 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op121_write_state7 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op115_write_state7 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op116_read_state7 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op121_write_state7 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op115_write_state7 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op116_read_state7 == 1'b1))));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op122_write_state8 == 1'b1) & (upsamp4_out11_full_n == 1'b0)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op128_write_state8 == 1'b1)) | ((ap_predicate_op123_read_state8 == 1'b1) & (conv4_out10_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op122_write_state8 == 1'b1) & (upsamp4_out11_full_n == 1'b0)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op128_write_state8 == 1'b1)) | ((ap_predicate_op123_read_state8 == 1'b1) & (conv4_out10_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op122_write_state8 == 1'b1) & (upsamp4_out11_full_n == 1'b0)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op128_write_state8 == 1'b1)) | ((ap_predicate_op123_read_state8 == 1'b1) & (conv4_out10_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = (((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560_pp0_iter1_reg == 1'd0)) | ((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state11_pp0_stage2_iter1 = (upsamp4_out11_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op44_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op51_read_state3 == 1'b1) & (conv4_out10_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op71_write_state4 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op65_write_state4 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op66_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op95_write_state5 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op88_write_state5 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op89_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op112_write_state6 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op106_write_state6 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op107_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = (((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op121_write_state7 == 1'b1)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op115_write_state7 == 1'b1)) | ((conv4_out10_empty_n == 1'b0) & (ap_predicate_op116_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = (((ap_predicate_op122_write_state8 == 1'b1) & (upsamp4_out11_full_n == 1'b0)) | ((upsamp4_out11_full_n == 1'b0) & (ap_predicate_op128_write_state8 == 1'b1)) | ((ap_predicate_op123_read_state8 == 1'b1) & (conv4_out10_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = (((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560 == 1'd0)) | ((upsamp4_out11_full_n == 1'b0) & (empty_46_reg_560 == 1'd1)) | ((empty_46_reg_560 == 1'd0) & (conv4_out10_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_469 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

always @ (*) begin
    ap_predicate_op106_write_state6 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op107_read_state6 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op112_write_state6 = ((empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op115_write_state7 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op116_read_state7 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op121_write_state7 = ((empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op122_write_state8 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op123_read_state8 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op128_write_state8 = ((empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op44_read_state2 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op51_read_state3 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op65_write_state4 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op66_read_state4 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op71_write_state4 = ((empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op88_write_state5 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op89_read_state5 = ((empty_46_reg_560 == 1'd0) & (icmp_ln108_reg_538 == 1'd0));
end

always @ (*) begin
    ap_predicate_op95_write_state5 = ((empty_46_reg_560 == 1'd1) & (icmp_ln108_reg_538 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign cona_col_3_fu_351_p2 = (select_ln108_fu_295_p3 + 4'd1);

assign div15_i_udiv_cast1_fu_449_p1 = div15_i_udiv_reg_542;

assign empty_46_fu_345_p2 = (trunc_ln109_fu_321_p1 | trunc_ln108_fu_317_p1);

assign grp_fu_223_p2 = (grp_fu_223_p0 ^ 3'd4);

assign grp_fu_228_p2 = ($signed(grp_fu_228_p0) + $signed(5'd20));

assign icmp_ln108_fu_271_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_289_p2 = ((ap_sig_allocacmp_cona_col_load == 4'd8) ? 1'b1 : 1'b0);

assign select_ln108_3_fu_309_p3 = ((icmp_ln109_fu_289_p2[0:0] == 1'b1) ? add_ln108_3_fu_303_p2 : ap_sig_allocacmp_cona_row_load);

assign select_ln108_fu_295_p3 = ((icmp_ln109_fu_289_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_cona_col_load);

assign sext_ln114_6_fu_492_p1 = zext_ln114_24_cast_reg_584;

assign sext_ln114_7_fu_500_p1 = xor_ln114_reg_604;

assign sext_ln114_fu_453_p0 = grp_fu_223_p2;

assign sext_ln114_fu_453_p1 = sext_ln114_fu_453_p0;

assign sext_ln116_6_fu_467_p1 = zext_ln116_24_cast_reg_574;

assign sext_ln116_7_fu_508_p1 = $signed(grp_fu_223_p2);

assign sext_ln116_fu_428_p1 = $signed(grp_fu_223_p2);

assign start_out = real_start;

assign trunc_ln108_fu_317_p1 = select_ln108_3_fu_309_p3[0:0];

assign trunc_ln109_fu_321_p1 = select_ln108_fu_295_p3[0:0];

assign zext_ln114_23_cast_fu_380_p3 = {{1'd1}, {div15_i_udiv_cast_cast_reg_554}};

assign zext_ln114_23_fu_387_p1 = zext_ln114_23_cast_fu_380_p3;

assign zext_ln114_24_cast_fu_416_p3 = {{1'd1}, {div15_i_udiv_reg_542}};

assign zext_ln114_24_fu_423_p1 = $unsigned(zext_ln114_24_cast_fu_416_p3);

assign zext_ln114_25_fu_457_p1 = $unsigned(sext_ln114_fu_453_p1);

assign zext_ln114_26_cast_fu_475_p3 = {{2'd2}, {div15_i_udiv_reg_542}};

assign zext_ln114_26_fu_482_p1 = zext_ln114_26_cast_fu_475_p3;

assign zext_ln114_27_fu_487_p1 = grp_fu_228_p2;

assign zext_ln114_28_fu_495_p1 = $unsigned(sext_ln114_6_fu_492_p1);

assign zext_ln114_29_fu_503_p1 = $unsigned(sext_ln114_7_fu_500_p1);

assign zext_ln114_fu_372_p1 = div15_i_udiv_reg_542;

assign zext_ln116_23_cast_fu_392_p3 = {{1'd1}, {div15_i_udiv_cast_cast_reg_554}};

assign zext_ln116_23_fu_399_p1 = zext_ln116_23_cast_fu_392_p3;

assign zext_ln116_24_cast_fu_404_p3 = {{1'd1}, {div15_i_udiv_reg_542}};

assign zext_ln116_24_fu_411_p1 = $unsigned(zext_ln116_24_cast_fu_404_p3);

assign zext_ln116_25_fu_432_p1 = $unsigned(sext_ln116_fu_428_p1);

assign zext_ln116_26_cast_fu_437_p3 = {{2'd2}, {div15_i_udiv_reg_542}};

assign zext_ln116_26_fu_444_p1 = zext_ln116_26_cast_fu_437_p3;

assign zext_ln116_27_fu_462_p1 = grp_fu_228_p2;

assign zext_ln116_28_fu_470_p1 = $unsigned(sext_ln116_6_fu_467_p1);

assign zext_ln116_29_fu_512_p1 = $unsigned(sext_ln116_7_fu_508_p1);

assign zext_ln116_fu_376_p1 = div15_i_udiv_reg_542;

always @ (posedge ap_clk) begin
    zext_ln116_24_cast_reg_574[3] <= 1'b1;
    zext_ln114_24_cast_reg_584[3] <= 1'b1;
    div15_i_udiv_cast1_reg_599[4:3] <= 2'b00;
end

endmodule //decode_upsamp4
