// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="decode_decode,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010i-clg225-1L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.222700,HLS_SYN_LAT=14928,HLS_SYN_TPT=14619,HLS_SYN_MEM=9,HLS_SYN_DSP=0,HLS_SYN_FF=574756,HLS_SYN_LUT=343121,HLS_VERSION=2023_1}" *)

module decode (
        full_in_TDATA,
        full_out_TDATA,
        ap_clk,
        ap_rst_n,
        full_in_TVALID,
        full_in_TREADY,
        ap_start,
        full_out_TVALID,
        full_out_TREADY,
        ap_done,
        ap_ready,
        ap_idle
);


input  [39:0] full_in_TDATA;
output  [39:0] full_out_TDATA;
input   ap_clk;
input   ap_rst_n;
input   full_in_TVALID;
output   full_in_TREADY;
input   ap_start;
output   full_out_TVALID;
input   full_out_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    conv4_U0_ap_start;
wire    conv4_U0_ap_done;
wire    conv4_U0_ap_continue;
wire    conv4_U0_ap_idle;
wire    conv4_U0_ap_ready;
wire   [39:0] conv4_U0_conv4_out_din;
wire    conv4_U0_conv4_out_write;
wire    conv4_U0_start_out;
wire    conv4_U0_start_write;
wire    conv4_U0_full_in_TREADY;
wire    upsamp4_U0_ap_start;
wire    upsamp4_U0_ap_done;
wire    upsamp4_U0_ap_continue;
wire    upsamp4_U0_ap_idle;
wire    upsamp4_U0_ap_ready;
wire    upsamp4_U0_conv4_out_read;
wire   [39:0] upsamp4_U0_upsamp4_out_din;
wire    upsamp4_U0_upsamp4_out_write;
wire    upsamp4_U0_start_out;
wire    upsamp4_U0_start_write;
wire    conv5_U0_ap_start;
wire    conv5_U0_ap_done;
wire    conv5_U0_ap_continue;
wire    conv5_U0_ap_idle;
wire    conv5_U0_ap_ready;
wire    conv5_U0_upsamp4_out_read;
wire   [39:0] conv5_U0_conv5_out_din;
wire    conv5_U0_conv5_out_write;
wire    conv5_U0_start_out;
wire    conv5_U0_start_write;
wire    upsamp5_U0_ap_start;
wire    upsamp5_U0_ap_done;
wire    upsamp5_U0_ap_continue;
wire    upsamp5_U0_ap_idle;
wire    upsamp5_U0_ap_ready;
wire    upsamp5_U0_conv5_out_read;
wire   [39:0] upsamp5_U0_upsamp5_out_din;
wire    upsamp5_U0_upsamp5_out_write;
wire    upsamp5_U0_start_out;
wire    upsamp5_U0_start_write;
wire    conv6_U0_ap_start;
wire    conv6_U0_ap_done;
wire    conv6_U0_ap_continue;
wire    conv6_U0_ap_idle;
wire    conv6_U0_ap_ready;
wire   [39:0] conv6_U0_conv6_out_din;
wire    conv6_U0_conv6_out_write;
wire    conv6_U0_start_out;
wire    conv6_U0_start_write;
wire    conv6_U0_upsamp5_out_read;
wire    upsamp6_U0_ap_start;
wire    upsamp6_U0_ap_done;
wire    upsamp6_U0_ap_continue;
wire    upsamp6_U0_ap_idle;
wire    upsamp6_U0_ap_ready;
wire    upsamp6_U0_conv6_out_read;
wire   [39:0] upsamp6_U0_upsamp6_out_din;
wire    upsamp6_U0_upsamp6_out_write;
wire    upsamp6_U0_start_out;
wire    upsamp6_U0_start_write;
wire    conv7_U0_ap_start;
wire    conv7_U0_ap_done;
wire    conv7_U0_ap_continue;
wire    conv7_U0_ap_idle;
wire    conv7_U0_ap_ready;
wire    conv7_U0_upsamp6_out_read;
wire   [39:0] conv7_U0_full_out_TDATA;
wire    conv7_U0_full_out_TVALID;
wire    conv4_out_full_n;
wire   [39:0] conv4_out_dout;
wire   [1:0] conv4_out_num_data_valid;
wire   [1:0] conv4_out_fifo_cap;
wire    conv4_out_empty_n;
wire    upsamp4_out_full_n;
wire   [39:0] upsamp4_out_dout;
wire   [1:0] upsamp4_out_num_data_valid;
wire   [1:0] upsamp4_out_fifo_cap;
wire    upsamp4_out_empty_n;
wire    conv5_out_full_n;
wire   [39:0] conv5_out_dout;
wire   [1:0] conv5_out_num_data_valid;
wire   [1:0] conv5_out_fifo_cap;
wire    conv5_out_empty_n;
wire    upsamp5_out_full_n;
wire   [39:0] upsamp5_out_dout;
wire   [1:0] upsamp5_out_num_data_valid;
wire   [1:0] upsamp5_out_fifo_cap;
wire    upsamp5_out_empty_n;
wire    conv6_out_full_n;
wire   [39:0] conv6_out_dout;
wire   [1:0] conv6_out_num_data_valid;
wire   [1:0] conv6_out_fifo_cap;
wire    conv6_out_empty_n;
wire    upsamp6_out_full_n;
wire   [39:0] upsamp6_out_dout;
wire   [1:0] upsamp6_out_num_data_valid;
wire   [1:0] upsamp6_out_fifo_cap;
wire    upsamp6_out_empty_n;
wire   [0:0] start_for_upsamp4_U0_din;
wire    start_for_upsamp4_U0_full_n;
wire   [0:0] start_for_upsamp4_U0_dout;
wire    start_for_upsamp4_U0_empty_n;
wire   [0:0] start_for_conv5_U0_din;
wire    start_for_conv5_U0_full_n;
wire   [0:0] start_for_conv5_U0_dout;
wire    start_for_conv5_U0_empty_n;
wire   [0:0] start_for_upsamp5_U0_din;
wire    start_for_upsamp5_U0_full_n;
wire   [0:0] start_for_upsamp5_U0_dout;
wire    start_for_upsamp5_U0_empty_n;
wire   [0:0] start_for_conv6_U0_din;
wire    start_for_conv6_U0_full_n;
wire   [0:0] start_for_conv6_U0_dout;
wire    start_for_conv6_U0_empty_n;
wire   [0:0] start_for_upsamp6_U0_din;
wire    start_for_upsamp6_U0_full_n;
wire   [0:0] start_for_upsamp6_U0_dout;
wire    start_for_upsamp6_U0_empty_n;
wire   [0:0] start_for_conv7_U0_din;
wire    start_for_conv7_U0_full_n;
wire   [0:0] start_for_conv7_U0_dout;
wire    start_for_conv7_U0_empty_n;

decode_conv4 conv4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(conv4_U0_ap_start),
    .start_full_n(start_for_upsamp4_U0_full_n),
    .ap_done(conv4_U0_ap_done),
    .ap_continue(conv4_U0_ap_continue),
    .ap_idle(conv4_U0_ap_idle),
    .ap_ready(conv4_U0_ap_ready),
    .full_in_TVALID(full_in_TVALID),
    .conv4_out_din(conv4_U0_conv4_out_din),
    .conv4_out_num_data_valid(conv4_out_num_data_valid),
    .conv4_out_fifo_cap(conv4_out_fifo_cap),
    .conv4_out_full_n(conv4_out_full_n),
    .conv4_out_write(conv4_U0_conv4_out_write),
    .start_out(conv4_U0_start_out),
    .start_write(conv4_U0_start_write),
    .full_in_TDATA(full_in_TDATA),
    .full_in_TREADY(conv4_U0_full_in_TREADY)
);

decode_upsamp4 upsamp4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(upsamp4_U0_ap_start),
    .start_full_n(start_for_conv5_U0_full_n),
    .ap_done(upsamp4_U0_ap_done),
    .ap_continue(upsamp4_U0_ap_continue),
    .ap_idle(upsamp4_U0_ap_idle),
    .ap_ready(upsamp4_U0_ap_ready),
    .conv4_out_dout(conv4_out_dout),
    .conv4_out_num_data_valid(conv4_out_num_data_valid),
    .conv4_out_fifo_cap(conv4_out_fifo_cap),
    .conv4_out_empty_n(conv4_out_empty_n),
    .conv4_out_read(upsamp4_U0_conv4_out_read),
    .upsamp4_out_din(upsamp4_U0_upsamp4_out_din),
    .upsamp4_out_num_data_valid(upsamp4_out_num_data_valid),
    .upsamp4_out_fifo_cap(upsamp4_out_fifo_cap),
    .upsamp4_out_full_n(upsamp4_out_full_n),
    .upsamp4_out_write(upsamp4_U0_upsamp4_out_write),
    .start_out(upsamp4_U0_start_out),
    .start_write(upsamp4_U0_start_write)
);

decode_conv5 conv5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(conv5_U0_ap_start),
    .start_full_n(start_for_upsamp5_U0_full_n),
    .ap_done(conv5_U0_ap_done),
    .ap_continue(conv5_U0_ap_continue),
    .ap_idle(conv5_U0_ap_idle),
    .ap_ready(conv5_U0_ap_ready),
    .upsamp4_out_dout(upsamp4_out_dout),
    .upsamp4_out_num_data_valid(upsamp4_out_num_data_valid),
    .upsamp4_out_fifo_cap(upsamp4_out_fifo_cap),
    .upsamp4_out_empty_n(upsamp4_out_empty_n),
    .upsamp4_out_read(conv5_U0_upsamp4_out_read),
    .conv5_out_din(conv5_U0_conv5_out_din),
    .conv5_out_num_data_valid(conv5_out_num_data_valid),
    .conv5_out_fifo_cap(conv5_out_fifo_cap),
    .conv5_out_full_n(conv5_out_full_n),
    .conv5_out_write(conv5_U0_conv5_out_write),
    .start_out(conv5_U0_start_out),
    .start_write(conv5_U0_start_write)
);

decode_upsamp5 upsamp5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(upsamp5_U0_ap_start),
    .start_full_n(start_for_conv6_U0_full_n),
    .ap_done(upsamp5_U0_ap_done),
    .ap_continue(upsamp5_U0_ap_continue),
    .ap_idle(upsamp5_U0_ap_idle),
    .ap_ready(upsamp5_U0_ap_ready),
    .conv5_out_dout(conv5_out_dout),
    .conv5_out_num_data_valid(conv5_out_num_data_valid),
    .conv5_out_fifo_cap(conv5_out_fifo_cap),
    .conv5_out_empty_n(conv5_out_empty_n),
    .conv5_out_read(upsamp5_U0_conv5_out_read),
    .upsamp5_out_din(upsamp5_U0_upsamp5_out_din),
    .upsamp5_out_num_data_valid(upsamp5_out_num_data_valid),
    .upsamp5_out_fifo_cap(upsamp5_out_fifo_cap),
    .upsamp5_out_full_n(upsamp5_out_full_n),
    .upsamp5_out_write(upsamp5_U0_upsamp5_out_write),
    .start_out(upsamp5_U0_start_out),
    .start_write(upsamp5_U0_start_write)
);

decode_conv6 conv6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(conv6_U0_ap_start),
    .start_full_n(start_for_upsamp6_U0_full_n),
    .ap_done(conv6_U0_ap_done),
    .ap_continue(conv6_U0_ap_continue),
    .ap_idle(conv6_U0_ap_idle),
    .ap_ready(conv6_U0_ap_ready),
    .conv6_out_din(conv6_U0_conv6_out_din),
    .conv6_out_num_data_valid(conv6_out_num_data_valid),
    .conv6_out_fifo_cap(conv6_out_fifo_cap),
    .conv6_out_full_n(conv6_out_full_n),
    .conv6_out_write(conv6_U0_conv6_out_write),
    .start_out(conv6_U0_start_out),
    .start_write(conv6_U0_start_write),
    .upsamp5_out_dout(upsamp5_out_dout),
    .upsamp5_out_num_data_valid(upsamp5_out_num_data_valid),
    .upsamp5_out_fifo_cap(upsamp5_out_fifo_cap),
    .upsamp5_out_empty_n(upsamp5_out_empty_n),
    .upsamp5_out_read(conv6_U0_upsamp5_out_read)
);

decode_upsamp6 upsamp6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(upsamp6_U0_ap_start),
    .start_full_n(start_for_conv7_U0_full_n),
    .ap_done(upsamp6_U0_ap_done),
    .ap_continue(upsamp6_U0_ap_continue),
    .ap_idle(upsamp6_U0_ap_idle),
    .ap_ready(upsamp6_U0_ap_ready),
    .conv6_out_dout(conv6_out_dout),
    .conv6_out_num_data_valid(conv6_out_num_data_valid),
    .conv6_out_fifo_cap(conv6_out_fifo_cap),
    .conv6_out_empty_n(conv6_out_empty_n),
    .conv6_out_read(upsamp6_U0_conv6_out_read),
    .upsamp6_out_din(upsamp6_U0_upsamp6_out_din),
    .upsamp6_out_num_data_valid(upsamp6_out_num_data_valid),
    .upsamp6_out_fifo_cap(upsamp6_out_fifo_cap),
    .upsamp6_out_full_n(upsamp6_out_full_n),
    .upsamp6_out_write(upsamp6_U0_upsamp6_out_write),
    .start_out(upsamp6_U0_start_out),
    .start_write(upsamp6_U0_start_write)
);

decode_conv7 conv7_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(conv7_U0_ap_start),
    .ap_done(conv7_U0_ap_done),
    .ap_continue(conv7_U0_ap_continue),
    .ap_idle(conv7_U0_ap_idle),
    .ap_ready(conv7_U0_ap_ready),
    .upsamp6_out_dout(upsamp6_out_dout),
    .upsamp6_out_num_data_valid(upsamp6_out_num_data_valid),
    .upsamp6_out_fifo_cap(upsamp6_out_fifo_cap),
    .upsamp6_out_empty_n(upsamp6_out_empty_n),
    .upsamp6_out_read(conv7_U0_upsamp6_out_read),
    .full_out_TDATA(conv7_U0_full_out_TDATA),
    .full_out_TVALID(conv7_U0_full_out_TVALID),
    .full_out_TREADY(full_out_TREADY)
);

decode_fifo_w40_d2_S conv4_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(conv4_U0_conv4_out_din),
    .if_full_n(conv4_out_full_n),
    .if_write(conv4_U0_conv4_out_write),
    .if_dout(conv4_out_dout),
    .if_num_data_valid(conv4_out_num_data_valid),
    .if_fifo_cap(conv4_out_fifo_cap),
    .if_empty_n(conv4_out_empty_n),
    .if_read(upsamp4_U0_conv4_out_read)
);

decode_fifo_w40_d2_S upsamp4_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(upsamp4_U0_upsamp4_out_din),
    .if_full_n(upsamp4_out_full_n),
    .if_write(upsamp4_U0_upsamp4_out_write),
    .if_dout(upsamp4_out_dout),
    .if_num_data_valid(upsamp4_out_num_data_valid),
    .if_fifo_cap(upsamp4_out_fifo_cap),
    .if_empty_n(upsamp4_out_empty_n),
    .if_read(conv5_U0_upsamp4_out_read)
);

decode_fifo_w40_d2_S conv5_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(conv5_U0_conv5_out_din),
    .if_full_n(conv5_out_full_n),
    .if_write(conv5_U0_conv5_out_write),
    .if_dout(conv5_out_dout),
    .if_num_data_valid(conv5_out_num_data_valid),
    .if_fifo_cap(conv5_out_fifo_cap),
    .if_empty_n(conv5_out_empty_n),
    .if_read(upsamp5_U0_conv5_out_read)
);

decode_fifo_w40_d2_S upsamp5_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(upsamp5_U0_upsamp5_out_din),
    .if_full_n(upsamp5_out_full_n),
    .if_write(upsamp5_U0_upsamp5_out_write),
    .if_dout(upsamp5_out_dout),
    .if_num_data_valid(upsamp5_out_num_data_valid),
    .if_fifo_cap(upsamp5_out_fifo_cap),
    .if_empty_n(upsamp5_out_empty_n),
    .if_read(conv6_U0_upsamp5_out_read)
);

decode_fifo_w40_d2_S conv6_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(conv6_U0_conv6_out_din),
    .if_full_n(conv6_out_full_n),
    .if_write(conv6_U0_conv6_out_write),
    .if_dout(conv6_out_dout),
    .if_num_data_valid(conv6_out_num_data_valid),
    .if_fifo_cap(conv6_out_fifo_cap),
    .if_empty_n(conv6_out_empty_n),
    .if_read(upsamp6_U0_conv6_out_read)
);

decode_fifo_w40_d2_S upsamp6_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(upsamp6_U0_upsamp6_out_din),
    .if_full_n(upsamp6_out_full_n),
    .if_write(upsamp6_U0_upsamp6_out_write),
    .if_dout(upsamp6_out_dout),
    .if_num_data_valid(upsamp6_out_num_data_valid),
    .if_fifo_cap(upsamp6_out_fifo_cap),
    .if_empty_n(upsamp6_out_empty_n),
    .if_read(conv7_U0_upsamp6_out_read)
);

decode_start_for_upsamp4_U0 start_for_upsamp4_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_upsamp4_U0_din),
    .if_full_n(start_for_upsamp4_U0_full_n),
    .if_write(conv4_U0_start_write),
    .if_dout(start_for_upsamp4_U0_dout),
    .if_empty_n(start_for_upsamp4_U0_empty_n),
    .if_read(upsamp4_U0_ap_ready)
);

decode_start_for_conv5_U0 start_for_conv5_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_conv5_U0_din),
    .if_full_n(start_for_conv5_U0_full_n),
    .if_write(upsamp4_U0_start_write),
    .if_dout(start_for_conv5_U0_dout),
    .if_empty_n(start_for_conv5_U0_empty_n),
    .if_read(conv5_U0_ap_ready)
);

decode_start_for_upsamp5_U0 start_for_upsamp5_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_upsamp5_U0_din),
    .if_full_n(start_for_upsamp5_U0_full_n),
    .if_write(conv5_U0_start_write),
    .if_dout(start_for_upsamp5_U0_dout),
    .if_empty_n(start_for_upsamp5_U0_empty_n),
    .if_read(upsamp5_U0_ap_ready)
);

decode_start_for_conv6_U0 start_for_conv6_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_conv6_U0_din),
    .if_full_n(start_for_conv6_U0_full_n),
    .if_write(upsamp5_U0_start_write),
    .if_dout(start_for_conv6_U0_dout),
    .if_empty_n(start_for_conv6_U0_empty_n),
    .if_read(conv6_U0_ap_ready)
);

decode_start_for_upsamp6_U0 start_for_upsamp6_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_upsamp6_U0_din),
    .if_full_n(start_for_upsamp6_U0_full_n),
    .if_write(conv6_U0_start_write),
    .if_dout(start_for_upsamp6_U0_dout),
    .if_empty_n(start_for_upsamp6_U0_empty_n),
    .if_read(upsamp6_U0_ap_ready)
);

decode_start_for_conv7_U0 start_for_conv7_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_conv7_U0_din),
    .if_full_n(start_for_conv7_U0_full_n),
    .if_write(upsamp6_U0_start_write),
    .if_dout(start_for_conv7_U0_dout),
    .if_empty_n(start_for_conv7_U0_empty_n),
    .if_read(conv7_U0_ap_ready)
);

assign ap_done = conv7_U0_ap_done;

assign ap_idle = (upsamp6_U0_ap_idle & upsamp5_U0_ap_idle & upsamp4_U0_ap_idle & conv7_U0_ap_idle & conv6_U0_ap_idle & conv5_U0_ap_idle & conv4_U0_ap_idle);

assign ap_ready = conv4_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign conv4_U0_ap_continue = 1'b1;

assign conv4_U0_ap_start = ap_start;

assign conv5_U0_ap_continue = 1'b1;

assign conv5_U0_ap_start = start_for_conv5_U0_empty_n;

assign conv6_U0_ap_continue = 1'b1;

assign conv6_U0_ap_start = start_for_conv6_U0_empty_n;

assign conv7_U0_ap_continue = 1'b1;

assign conv7_U0_ap_start = start_for_conv7_U0_empty_n;

assign full_in_TREADY = conv4_U0_full_in_TREADY;

assign full_out_TDATA = conv7_U0_full_out_TDATA;

assign full_out_TVALID = conv7_U0_full_out_TVALID;

assign start_for_conv5_U0_din = 1'b1;

assign start_for_conv6_U0_din = 1'b1;

assign start_for_conv7_U0_din = 1'b1;

assign start_for_upsamp4_U0_din = 1'b1;

assign start_for_upsamp5_U0_din = 1'b1;

assign start_for_upsamp6_U0_din = 1'b1;

assign upsamp4_U0_ap_continue = 1'b1;

assign upsamp4_U0_ap_start = start_for_upsamp4_U0_empty_n;

assign upsamp5_U0_ap_continue = 1'b1;

assign upsamp5_U0_ap_start = start_for_upsamp5_U0_empty_n;

assign upsamp6_U0_ap_continue = 1'b1;

assign upsamp6_U0_ap_start = start_for_upsamp6_U0_empty_n;

endmodule //decode
