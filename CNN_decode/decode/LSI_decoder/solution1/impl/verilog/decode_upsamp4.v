// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module decode_upsamp4 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        conv4_out_dout,
        conv4_out_num_data_valid,
        conv4_out_fifo_cap,
        conv4_out_empty_n,
        conv4_out_read,
        upsamp4_out_din,
        upsamp4_out_num_data_valid,
        upsamp4_out_fifo_cap,
        upsamp4_out_full_n,
        upsamp4_out_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [39:0] conv4_out_dout;
input  [1:0] conv4_out_num_data_valid;
input  [1:0] conv4_out_fifo_cap;
input   conv4_out_empty_n;
output   conv4_out_read;
output  [39:0] upsamp4_out_din;
input  [1:0] upsamp4_out_num_data_valid;
input  [1:0] upsamp4_out_fifo_cap;
input   upsamp4_out_full_n;
output   upsamp4_out_write;
output   start_out;
output   start_write;

reg ap_idle;
reg conv4_out_read;
reg[39:0] upsamp4_out_din;
reg upsamp4_out_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] icmp_ln76_reg_477;
reg   [0:0] empty_reg_500;
reg    ap_predicate_op101_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state16_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_subdone;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    conv4_out_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg    upsamp4_out_blk_n;
wire   [0:0] icmp_ln76_fu_260_p2;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op106_read_state9;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln76_fu_284_p3;
reg   [3:0] select_ln76_reg_481;
reg   [2:0] div15_i_udiv_reg_486;
reg   [1:0] div15_i_udiv_cast_cast_reg_495;
wire   [0:0] empty_fu_334_p2;
reg    ap_predicate_op49_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [39:0] conv4_out_read_reg_509;
reg    ap_predicate_op58_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state11_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
wire  signed [3:0] zext_ln84_24_cast_fu_366_p3;
reg  signed [3:0] zext_ln84_24_cast_reg_519;
reg   [4:0] upsam_buf_addr_26_reg_524;
reg   [39:0] conv4_out_read_1_reg_529;
wire   [39:0] upsam_buf4_q0;
reg   [39:0] upsam_buf_load_reg_534;
wire  signed [2:0] xor_ln84_fu_381_p2;
reg  signed [2:0] xor_ln84_reg_539;
reg    ap_predicate_op71_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state12_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
reg   [4:0] upsam_buf_addr_27_reg_545;
reg   [4:0] upsam_buf_addr_28_reg_550;
reg   [39:0] conv4_out_read_2_reg_555;
reg   [39:0] upsam_buf_load_23_reg_560;
wire   [39:0] upsam_buf4_q1;
reg   [39:0] upsam_buf_load_24_reg_565;
reg   [4:0] upsam_buf_addr_29_reg_570;
reg    ap_predicate_op88_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state13_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
reg   [4:0] upsam_buf_addr_30_reg_576;
reg   [39:0] conv4_out_read_3_reg_582;
reg   [39:0] upsam_buf_load_25_reg_587;
reg   [39:0] upsam_buf_load_26_reg_592;
reg   [39:0] conv4_out_read_4_reg_597;
reg    ap_predicate_op94_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state14_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
reg   [39:0] conv4_out_read_5_reg_612;
reg    ap_predicate_op99_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state15_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_pp0_stage7_11001;
reg   [39:0] upsam_buf_load_29_reg_627;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [4:0] upsam_buf4_address0;
reg    upsam_buf4_ce0;
reg    upsam_buf4_we0;
reg   [4:0] upsam_buf4_address1;
reg    upsam_buf4_ce1;
reg    upsam_buf4_we1;
reg   [39:0] ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i571115212735_reg_172;
reg   [39:0] ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i571115212735_reg_172;
reg   [39:0] ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_181016202834_reg_182;
reg   [39:0] ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_181016202834_reg_182;
reg   [39:0] ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_21214222636_reg_192;
reg   [39:0] ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_21214222636_reg_192;
reg   [39:0] ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_317192933_reg_202;
reg   [39:0] ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_317192933_reg_202;
reg   [39:0] ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_4232537_reg_212;
reg   [39:0] ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_4232537_reg_212;
reg   [39:0] ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_53032_reg_222;
reg   [39:0] ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_53032_reg_222;
reg   [39:0] ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_638_reg_232;
reg   [39:0] ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_638_reg_232;
wire   [63:0] zext_ln84_fu_350_p1;
wire   [63:0] zext_ln84_23_fu_361_p1;
wire   [63:0] zext_ln84_24_fu_373_p1;
wire   [63:0] zext_ln84_25_fu_390_p1;
wire   [63:0] zext_ln84_26_fu_403_p1;
wire   [63:0] zext_ln84_27_fu_417_p1;
wire   [63:0] zext_ln84_28_fu_425_p1;
wire   [63:0] zext_ln82_fu_443_p1;
wire   [63:0] zext_ln84_29_fu_451_p1;
reg   [3:0] cona_col_fu_68;
wire   [3:0] cona_col_3_fu_430_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_cona_col_load;
reg   [3:0] cona_row_fu_72;
wire   [3:0] select_ln76_3_fu_298_p3;
reg   [3:0] ap_sig_allocacmp_cona_row_load;
reg   [6:0] indvar_flatten_fu_76;
wire   [6:0] add_ln76_fu_266_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
wire   [0:0] icmp_ln77_fu_278_p2;
wire   [3:0] add_ln76_3_fu_292_p2;
wire   [0:0] trunc_ln77_fu_310_p1;
wire   [0:0] trunc_ln76_fu_306_p1;
wire   [2:0] zext_ln84_23_cast_fu_354_p3;
wire  signed [3:0] sext_ln84_fu_386_p1;
wire   [3:0] div15_i_udiv_cast_fu_378_p1;
wire   [4:0] zext_ln84_26_cast_fu_395_p3;
wire   [4:0] div15_i_udiv_cast1_fu_408_p1;
wire   [4:0] add_ln84_fu_411_p2;
wire  signed [4:0] sext_ln84_6_fu_422_p1;
wire  signed [4:0] sext_ln82_fu_440_p1;
wire  signed [4:0] sext_ln84_7_fu_448_p1;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_374;
reg    ap_condition_733;
reg    ap_condition_737;
reg    ap_condition_446;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

decode_upsamp4_upsam_buf4_RAM_AUTO_1R1W #(
    .DataWidth( 40 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
upsam_buf4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(upsam_buf4_address0),
    .ce0(upsam_buf4_ce0),
    .we0(upsam_buf4_we0),
    .d0(conv4_out_dout),
    .q0(upsam_buf4_q0),
    .address1(upsam_buf4_address1),
    .ce1(upsam_buf4_ce1),
    .we1(upsam_buf4_we1),
    .d1(conv4_out_dout),
    .q1(upsam_buf4_q1)
);

decode_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if (((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i571115212735_reg_172 <= conv4_out_read_reg_509;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i571115212735_reg_172 <= ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i571115212735_reg_172;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if (((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_181016202834_reg_182 <= conv4_out_read_1_reg_529;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_181016202834_reg_182 <= ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_181016202834_reg_182;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if (((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_21214222636_reg_192 <= conv4_out_read_2_reg_555;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_21214222636_reg_192 <= ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_21214222636_reg_192;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if (((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_317192933_reg_202 <= conv4_out_read_3_reg_582;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_317192933_reg_202 <= ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_317192933_reg_202;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if (((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_4232537_reg_212 <= conv4_out_read_4_reg_597;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_4232537_reg_212 <= ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_4232537_reg_212;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if (((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_53032_reg_222 <= conv4_out_read_5_reg_612;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_53032_reg_222 <= ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_53032_reg_222;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_374)) begin
        if (((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_638_reg_232 <= conv4_out_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_638_reg_232 <= ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_638_reg_232;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_737)) begin
            cona_col_fu_68 <= 4'd0;
        end else if ((1'b1 == ap_condition_733)) begin
            cona_col_fu_68 <= cona_col_3_fu_430_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_446)) begin
        if ((icmp_ln76_fu_260_p2 == 1'd0)) begin
            cona_row_fu_72 <= select_ln76_3_fu_298_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            cona_row_fu_72 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_446)) begin
        if ((icmp_ln76_fu_260_p2 == 1'd0)) begin
            indvar_flatten_fu_76 <= add_ln76_fu_266_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_76 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i571115212735_reg_172 <= upsam_buf_load_reg_534;
        ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_181016202834_reg_182 <= upsam_buf_load_23_reg_560;
        ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_21214222636_reg_192 <= upsam_buf_load_24_reg_565;
        ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_317192933_reg_202 <= upsam_buf_load_25_reg_587;
        ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_4232537_reg_212 <= upsam_buf_load_26_reg_592;
        ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_53032_reg_222 <= upsam_buf4_q1;
        ap_phi_reg_pp0_iter0_arrayidx18_0_0_0_load_i_638_reg_232 <= upsam_buf4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op58_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_out_read_1_reg_529 <= conv4_out_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv4_out_read_2_reg_555 <= conv4_out_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op88_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv4_out_read_3_reg_582 <= conv4_out_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op94_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv4_out_read_4_reg_597 <= conv4_out_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op99_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        conv4_out_read_5_reg_612 <= conv4_out_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv4_out_read_reg_509 <= conv4_out_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln76_fu_260_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        div15_i_udiv_cast_cast_reg_495 <= {{select_ln76_fu_284_p3[2:1]}};
        div15_i_udiv_reg_486 <= {{select_ln76_fu_284_p3[3:1]}};
        empty_reg_500 <= empty_fu_334_p2;
        select_ln76_reg_481 <= select_ln76_fu_284_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln76_reg_477 <= icmp_ln76_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln76_reg_477 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsam_buf_addr_26_reg_524[2 : 0] <= zext_ln84_24_fu_373_p1[2 : 0];
        zext_ln84_24_cast_reg_519[2 : 0] <= zext_ln84_24_cast_fu_366_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln76_reg_477 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        upsam_buf_addr_27_reg_545[3 : 0] <= zext_ln84_25_fu_390_p1[3 : 0];
        upsam_buf_addr_28_reg_550[2 : 0] <= zext_ln84_26_fu_403_p1[2 : 0];
        xor_ln84_reg_539 <= xor_ln84_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln76_reg_477 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        upsam_buf_addr_29_reg_570 <= zext_ln84_27_fu_417_p1;
        upsam_buf_addr_30_reg_576[2 : 0] <= zext_ln84_28_fu_425_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        upsam_buf_load_23_reg_560 <= upsam_buf4_q0;
        upsam_buf_load_24_reg_565 <= upsam_buf4_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        upsam_buf_load_25_reg_587 <= upsam_buf4_q0;
        upsam_buf_load_26_reg_592 <= upsam_buf4_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsam_buf_load_29_reg_627 <= upsam_buf4_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsam_buf_load_reg_534 <= upsam_buf4_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (icmp_ln76_reg_477 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_cona_col_load = 4'd0;
    end else begin
        ap_sig_allocacmp_cona_col_load = cona_col_fu_68;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_cona_row_load = 4'd0;
    end else begin
        ap_sig_allocacmp_cona_row_load = cona_row_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_76;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7) & (ap_predicate_op101_read_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv4_out_blk_n = conv4_out_empty_n;
    end else begin
        conv4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_predicate_op101_read_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op99_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op94_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op88_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op58_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_read_state2 == 1'b1) & 
    (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op106_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv4_out_read = 1'b1;
    end else begin
        conv4_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        upsam_buf4_address0 = zext_ln82_fu_443_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        upsam_buf4_address0 = upsam_buf_addr_29_reg_570;
    end else if (((1'b0 == ap_block_pp0_stage4) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        upsam_buf4_address0 = zext_ln84_28_fu_425_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        upsam_buf4_address0 = upsam_buf_addr_27_reg_545;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        upsam_buf4_address0 = zext_ln84_25_fu_390_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsam_buf4_address0 = zext_ln84_23_fu_361_p1;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        upsam_buf4_address0 = zext_ln84_fu_350_p1;
    end else begin
        upsam_buf4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        upsam_buf4_address1 = zext_ln84_29_fu_451_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        upsam_buf4_address1 = upsam_buf_addr_30_reg_576;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        upsam_buf4_address1 = upsam_buf_addr_28_reg_550;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        upsam_buf4_address1 = zext_ln84_27_fu_417_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        upsam_buf4_address1 = zext_ln84_26_fu_403_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        upsam_buf4_address1 = upsam_buf_addr_26_reg_524;
    end else if (((1'b0 == ap_block_pp0_stage2) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsam_buf4_address1 = zext_ln84_24_fu_373_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        upsam_buf4_address1 = zext_ln84_23_fu_361_p1;
    end else begin
        upsam_buf4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) 
    & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        upsam_buf4_ce0 = 1'b1;
    end else begin
        upsam_buf4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage3_11001) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage2_11001) & (empty_reg_500 == 1'd1) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) 
    & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        upsam_buf4_ce1 = 1'b1;
    end else begin
        upsam_buf4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        upsam_buf4_we0 = 1'b1;
    end else begin
        upsam_buf4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        upsam_buf4_we1 = 1'b1;
    end else begin
        upsam_buf4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        upsamp4_out_blk_n = upsamp4_out_full_n;
    end else begin
        upsamp4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7_01001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            upsamp4_out_din = upsam_buf_load_29_reg_627;
        end else if (((1'b0 == ap_block_pp0_stage6_01001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            upsamp4_out_din = ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_638_reg_232;
        end else if (((1'b0 == ap_block_pp0_stage5_01001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            upsamp4_out_din = ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_53032_reg_222;
        end else if (((1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            upsamp4_out_din = ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_4232537_reg_212;
        end else if (((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            upsamp4_out_din = ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_317192933_reg_202;
        end else if (((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            upsamp4_out_din = ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_21214222636_reg_192;
        end else if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            upsamp4_out_din = ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i_181016202834_reg_182;
        end else if (((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            upsamp4_out_din = ap_phi_reg_pp0_iter1_arrayidx18_0_0_0_load_i571115212735_reg_172;
        end else begin
            upsamp4_out_din = 'bx;
        end
    end else begin
        upsamp4_out_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        upsamp4_out_write = 1'b1;
    end else begin
        upsamp4_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln76_3_fu_292_p2 = (ap_sig_allocacmp_cona_row_load + 4'd1);

assign add_ln76_fu_266_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln84_fu_411_p2 = ($signed(div15_i_udiv_cast1_fu_408_p1) + $signed(5'd20));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((upsamp4_out_full_n == 1'b0) | ((conv4_out_empty_n == 1'b0) & (ap_predicate_op106_read_state9 == 1'b1)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((upsamp4_out_full_n == 1'b0) | ((conv4_out_empty_n == 1'b0) & (ap_predicate_op106_read_state9 == 1'b1)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((upsamp4_out_full_n == 1'b0) | ((conv4_out_empty_n == 1'b0) & (ap_predicate_op106_read_state9 == 1'b1)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_read_state2 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op58_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op58_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op58_read_state3 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state4 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op88_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op88_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op88_read_state5 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op94_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op94_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op94_read_state6 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_predicate_op99_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_predicate_op99_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((conv4_out_empty_n == 1'b0) & (ap_predicate_op99_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op101_read_state8 == 1'b1) & (conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op101_read_state8 == 1'b1) & (conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((upsamp4_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op101_read_state8 == 1'b1) & (conv4_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = (upsamp4_out_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state11_pp0_stage2_iter1 = (upsamp4_out_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state12_pp0_stage3_iter1 = (upsamp4_out_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state13_pp0_stage4_iter1 = (upsamp4_out_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state14_pp0_stage5_iter1 = (upsamp4_out_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state15_pp0_stage6_iter1 = (upsamp4_out_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state16_pp0_stage7_iter1 = (upsamp4_out_full_n == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((conv4_out_empty_n == 1'b0) & (ap_predicate_op49_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((conv4_out_empty_n == 1'b0) & (ap_predicate_op58_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((conv4_out_empty_n == 1'b0) & (ap_predicate_op71_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((conv4_out_empty_n == 1'b0) & (ap_predicate_op88_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((conv4_out_empty_n == 1'b0) & (ap_predicate_op94_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((conv4_out_empty_n == 1'b0) & (ap_predicate_op99_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op101_read_state8 == 1'b1) & (conv4_out_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((upsamp4_out_full_n == 1'b0) | ((conv4_out_empty_n == 1'b0) & (ap_predicate_op106_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_condition_374 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_446 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_733 = ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln76_reg_477 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_737 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

always @ (*) begin
    ap_predicate_op101_read_state8 = ((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0));
end

always @ (*) begin
    ap_predicate_op106_read_state9 = ((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0));
end

always @ (*) begin
    ap_predicate_op49_read_state2 = ((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0));
end

always @ (*) begin
    ap_predicate_op58_read_state3 = ((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0));
end

always @ (*) begin
    ap_predicate_op71_read_state4 = ((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0));
end

always @ (*) begin
    ap_predicate_op88_read_state5 = ((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0));
end

always @ (*) begin
    ap_predicate_op94_read_state6 = ((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0));
end

always @ (*) begin
    ap_predicate_op99_read_state7 = ((empty_reg_500 == 1'd0) & (icmp_ln76_reg_477 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign cona_col_3_fu_430_p2 = (select_ln76_reg_481 + 4'd1);

assign div15_i_udiv_cast1_fu_408_p1 = div15_i_udiv_reg_486;

assign div15_i_udiv_cast_fu_378_p1 = div15_i_udiv_reg_486;

assign empty_fu_334_p2 = (trunc_ln77_fu_310_p1 | trunc_ln76_fu_306_p1);

assign icmp_ln76_fu_260_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_278_p2 = ((ap_sig_allocacmp_cona_col_load == 4'd8) ? 1'b1 : 1'b0);

assign select_ln76_3_fu_298_p3 = ((icmp_ln77_fu_278_p2[0:0] == 1'b1) ? add_ln76_3_fu_292_p2 : ap_sig_allocacmp_cona_row_load);

assign select_ln76_fu_284_p3 = ((icmp_ln77_fu_278_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_cona_col_load);

assign sext_ln82_fu_440_p1 = xor_ln84_reg_539;

assign sext_ln84_6_fu_422_p1 = zext_ln84_24_cast_reg_519;

assign sext_ln84_7_fu_448_p1 = xor_ln84_reg_539;

assign sext_ln84_fu_386_p1 = xor_ln84_fu_381_p2;

assign start_out = real_start;

assign trunc_ln76_fu_306_p1 = select_ln76_3_fu_298_p3[0:0];

assign trunc_ln77_fu_310_p1 = select_ln76_fu_284_p3[0:0];

assign xor_ln84_fu_381_p2 = (div15_i_udiv_reg_486 ^ 3'd4);

assign zext_ln82_fu_443_p1 = $unsigned(sext_ln82_fu_440_p1);

assign zext_ln84_23_cast_fu_354_p3 = {{1'd1}, {div15_i_udiv_cast_cast_reg_495}};

assign zext_ln84_23_fu_361_p1 = zext_ln84_23_cast_fu_354_p3;

assign zext_ln84_24_cast_fu_366_p3 = {{1'd1}, {div15_i_udiv_reg_486}};

assign zext_ln84_24_fu_373_p1 = $unsigned(zext_ln84_24_cast_fu_366_p3);

assign zext_ln84_25_fu_390_p1 = $unsigned(sext_ln84_fu_386_p1);

assign zext_ln84_26_cast_fu_395_p3 = {{1'd1}, {div15_i_udiv_cast_fu_378_p1}};

assign zext_ln84_26_fu_403_p1 = zext_ln84_26_cast_fu_395_p3;

assign zext_ln84_27_fu_417_p1 = add_ln84_fu_411_p2;

assign zext_ln84_28_fu_425_p1 = $unsigned(sext_ln84_6_fu_422_p1);

assign zext_ln84_29_fu_451_p1 = $unsigned(sext_ln84_7_fu_448_p1);

assign zext_ln84_fu_350_p1 = div15_i_udiv_reg_486;

always @ (posedge ap_clk) begin
    zext_ln84_24_cast_reg_519[3] <= 1'b1;
    upsam_buf_addr_26_reg_524[4:3] <= 2'b01;
    upsam_buf_addr_27_reg_545[4] <= 1'b0;
    upsam_buf_addr_28_reg_550[4:3] <= 2'b10;
    upsam_buf_addr_30_reg_576[4:3] <= 2'b11;
end

endmodule //decode_upsamp4
